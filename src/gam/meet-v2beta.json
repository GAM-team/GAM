{
  "version": "v2beta",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://meet.mtls.googleapis.com/",
  "batchPath": "batch",
  "servicePath": "",
  "title": "Google Meet API",
  "canonicalName": "Meet",
  "protocol": "rest",
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "revision": "20250213",
  "schemas": {
    "ListTranscriptsResponse": {
      "id": "ListTranscriptsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to be circulated back for further List call if current List doesn't include all the transcripts. Unset if all transcripts are returned."
        },
        "transcripts": {
          "type": "array",
          "items": {
            "$ref": "Transcript"
          },
          "description": "List of transcripts in one page."
        }
      },
      "type": "object",
      "description": "Response for ListTranscripts method."
    },
    "Transcript": {
      "type": "object",
      "id": "Transcript",
      "description": "Metadata for a transcript generated from a conference. It refers to the ASR (Automatic Speech Recognition) result of user's speech during the conference.",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the transcript. Format: `conferenceRecords/{conference_record}/transcripts/{transcript}`, where `{transcript}` is a 1:1 mapping to each unique transcription session of the conference."
        },
        "docsDestination": {
          "readOnly": true,
          "description": "Output only. Where the Google Docs transcript is saved.",
          "$ref": "DocsDestination"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. Timestamp when the transcript stopped.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "Output only. Timestamp when the transcript started.",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "ENDED",
            "FILE_GENERATED"
          ],
          "description": "Output only. Current state.",
          "enumDescriptions": [
            "Default, never used.",
            "An active transcript session has started.",
            "This transcript session has ended, but the transcript file hasn't been generated yet.",
            "Transcript file is generated and ready to download."
          ]
        }
      }
    },
    "ListConferenceRecordsResponse": {
      "type": "object",
      "id": "ListConferenceRecordsResponse",
      "description": "Response of ListConferenceRecords method.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to be circulated back for further List call if current List does NOT include all the Conferences. Unset if all conferences have been returned."
        },
        "conferenceRecords": {
          "description": "List of conferences in one page.",
          "items": {
            "$ref": "ConferenceRecord"
          },
          "type": "array"
        }
      }
    },
    "SpaceConfig": {
      "properties": {
        "accessType": {
          "type": "string",
          "enum": [
            "ACCESS_TYPE_UNSPECIFIED",
            "OPEN",
            "TRUSTED",
            "RESTRICTED"
          ],
          "enumDescriptions": [
            "Default value specified by the user's organization. Note: This is never returned, as the configured access type is returned instead.",
            "Anyone with the join information (for example, the URL or phone access information) can join without knocking.",
            "Members of the host's organization, invited external users, and dial-in users can join without knocking. Everyone else must knock.",
            "Only invitees can join without knocking. Everyone else must knock."
          ],
          "description": "Access type of the meeting space that determines who can join without knocking. Default: The user's default access settings. Controlled by the user's admin for enterprise users or RESTRICTED."
        },
        "entryPointAccess": {
          "description": "Defines the entry points that can be used to join meetings hosted in this meeting space. Default: EntryPointAccess.ALL",
          "enumDescriptions": [
            "Unused.",
            "All entry points are allowed.",
            "Only entry points owned by the Google Cloud project that created the space can be used to join meetings in this space. Apps can use the Meet Embed SDK Web or mobile Meet SDKs to create owned entry points."
          ],
          "enum": [
            "ENTRY_POINT_ACCESS_UNSPECIFIED",
            "ALL",
            "CREATOR_APP_ONLY"
          ],
          "type": "string"
        }
      },
      "description": "The configuration pertaining to a meeting space.",
      "type": "object",
      "id": "SpaceConfig"
    },
    "DriveDestination": {
      "id": "DriveDestination",
      "description": "Export location where a recording file is saved in Google Drive.",
      "properties": {
        "exportUri": {
          "readOnly": true,
          "description": "Output only. Link used to play back the recording file in the browser. For example, `https://drive.google.com/file/d/{$fileId}/view`.",
          "type": "string"
        },
        "file": {
          "type": "string",
          "description": "Output only. The `fileId` for the underlying MP4 file. For example, \"1kuceFZohVoCh6FulBHxwy6I15Ogpc4hP\". Use `$ GET https://www.googleapis.com/drive/v3/files/{$fileId}?alt=media` to download the blob. For more information, see https://developers.google.com/drive/api/v3/reference/files/get.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "Recording": {
      "properties": {
        "driveDestination": {
          "$ref": "DriveDestination",
          "description": "Output only. Recording is saved to Google Drive as an MP4 file. The `drive_destination` includes the Drive `fileId` that can be used to download the file using the `files.get` method of the Drive API.",
          "readOnly": true
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Output only. Timestamp when the recording started.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Default, never used.",
            "An active recording session has started.",
            "This recording session has ended, but the recording file hasn't been generated yet.",
            "Recording file is generated and ready to download."
          ],
          "type": "string",
          "description": "Output only. Current state.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "ENDED",
            "FILE_GENERATED"
          ]
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Timestamp when the recording ended."
        },
        "name": {
          "description": "Output only. Resource name of the recording. Format: `conferenceRecords/{conference_record}/recordings/{recording}` where `{recording}` is a 1:1 mapping to each unique recording session during the conference.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "Recording",
      "description": "Metadata about a recording created during a conference."
    },
    "ParticipantSession": {
      "properties": {
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when the user session starts."
        },
        "name": {
          "description": "Identifier. Session id.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Timestamp when the user session ends. Unset if the user session hasnâ€™t ended."
        }
      },
      "id": "ParticipantSession",
      "type": "object",
      "description": "Refers to each unique join or leave session when a user joins a conference from a device. Note that any time a user joins the conference a new unique ID is assigned. That means if a user joins a space multiple times from the same device, they're assigned different IDs, and are also be treated as different participant sessions."
    },
    "ListRecordingsResponse": {
      "id": "ListRecordingsResponse",
      "description": "Response for ListRecordings method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to be circulated back for further List call if current List doesn't include all the recordings. Unset if all recordings are returned."
        },
        "recordings": {
          "description": "List of recordings in one page.",
          "type": "array",
          "items": {
            "$ref": "Recording"
          }
        }
      }
    },
    "EndActiveConferenceRequest": {
      "id": "EndActiveConferenceRequest",
      "properties": {},
      "description": "Request to end an ongoing conference of a space.",
      "type": "object"
    },
    "ListParticipantsResponse": {
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "Total, exact number of `participants`. By default, this field isn't included in the response. Set the field mask in [SystemParameterContext](https://cloud.google.com/apis/docs/system-parameters) to receive this field in the response."
        },
        "participants": {
          "description": "List of participants in one page.",
          "items": {
            "$ref": "Participant"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to be circulated back for further List call if current List doesn't include all the participants. Unset if all participants are returned."
        }
      },
      "type": "object",
      "description": "Response of ListParticipants method.",
      "id": "ListParticipantsResponse"
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "ListTranscriptEntriesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to be circulated back for further List call if current List doesn't include all the transcript entries. Unset if all entries are returned.",
          "type": "string"
        },
        "transcriptEntries": {
          "items": {
            "$ref": "TranscriptEntry"
          },
          "type": "array",
          "description": "List of TranscriptEntries in one page."
        }
      },
      "id": "ListTranscriptEntriesResponse",
      "description": "Response for ListTranscriptEntries method.",
      "type": "object"
    },
    "ConferenceRecord": {
      "description": "Single instance of a meeting held in a space.",
      "properties": {
        "space": {
          "description": "Output only. The space where the conference was held.",
          "type": "string",
          "readOnly": true
        },
        "expireTime": {
          "type": "string",
          "description": "Output only. Server enforced expiration time for when this conference record resource is deleted. The resource is deleted 30 days after the conference ends.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. Timestamp when the conference ended. Set for past conferences. Unset if the conference is ongoing.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Identifier. Resource name of the conference record. Format: `conferenceRecords/{conference_record}` where `{conference_record}` is a unique ID for each instance of a call within a space."
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when the conference started. Always set.",
          "readOnly": true
        }
      },
      "id": "ConferenceRecord",
      "type": "object"
    },
    "AnonymousUser": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Output only. User provided name when they join a conference anonymously.",
          "readOnly": true
        }
      },
      "description": "User who joins anonymously (meaning not signed into a Google Account).",
      "type": "object",
      "id": "AnonymousUser"
    },
    "ListParticipantSessionsResponse": {
      "type": "object",
      "properties": {
        "participantSessions": {
          "description": "List of participants in one page.",
          "type": "array",
          "items": {
            "$ref": "ParticipantSession"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to be circulated back for further List call if current List doesn't include all the participants. Unset if all participants are returned."
        }
      },
      "description": "Response of ListParticipants method.",
      "id": "ListParticipantSessionsResponse"
    },
    "TranscriptEntry": {
      "type": "object",
      "id": "TranscriptEntry",
      "properties": {
        "participant": {
          "type": "string",
          "description": "Output only. Refers to the participant who speaks.",
          "readOnly": true
        },
        "languageCode": {
          "type": "string",
          "description": "Output only. Language of spoken text, such as \"en-US\". IETF BCP 47 syntax (https://tools.ietf.org/html/bcp47)",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when the transcript entry started.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the entry. Format: \"conferenceRecords/{conference_record}/transcripts/{transcript}/entries/{entry}\""
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Timestamp when the transcript entry ended.",
          "format": "google-datetime"
        },
        "text": {
          "readOnly": true,
          "description": "Output only. The transcribed text of the participant's voice, at maximum 10K words. Note that the limit is subject to change.",
          "type": "string"
        }
      },
      "description": "Single entry for one userâ€™s speech during a transcript session."
    },
    "ActiveConference": {
      "description": "Active conference.",
      "id": "ActiveConference",
      "properties": {
        "conferenceRecord": {
          "readOnly": true,
          "description": "Output only. Reference to 'ConferenceRecord' resource. Format: `conferenceRecords/{conference_record}` where `{conference_record}` is a unique ID for each instance of a call within a space.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneUser": {
      "id": "PhoneUser",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Partially redacted user's phone number when calling."
        }
      },
      "description": "User dialing in from a phone where the user's identity is unknown because they haven't signed in with a Google Account."
    },
    "DocsDestination": {
      "properties": {
        "document": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The document ID for the underlying Google Docs transcript file. For example, \"1kuceFZohVoCh6FulBHxwy6I15Ogpc4hP\". Use the `documents.get` method of the Google Docs API (https://developers.google.com/docs/api/reference/rest/v1/documents/get) to fetch the content."
        },
        "exportUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. URI for the Google Docs transcript file. Use `https://docs.google.com/document/d/{$DocumentId}/view` to browse the transcript in the browser."
        }
      },
      "type": "object",
      "id": "DocsDestination",
      "description": "Google Docs location where the transcript file is saved."
    },
    "SignedinUser": {
      "description": "A signed-in user can be: a) An individual joining from a personal computer, mobile device, or through companion mode. b) A robot account used by conference room devices.",
      "id": "SignedinUser",
      "properties": {
        "displayName": {
          "readOnly": true,
          "description": "Output only. For a personal device, it's the user's first name and last name. For a robot account, it's the administrator-specified device name. For example, \"Altostrat Room\".",
          "type": "string"
        },
        "user": {
          "type": "string",
          "description": "Output only. Unique ID for the user. Interoperable with Admin SDK API and People API. Format: `users/{user}`",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "Space": {
      "properties": {
        "meetingUri": {
          "description": "Output only. URI used to join meetings consisting of `https://meet.google.com/` followed by the `meeting_code`. For example, `https://meet.google.com/abc-mnop-xyz`.",
          "type": "string",
          "readOnly": true
        },
        "activeConference": {
          "description": "Active conference, if it exists.",
          "$ref": "ActiveConference"
        },
        "name": {
          "type": "string",
          "description": "Immutable. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource identifier for the space. It's a unique, server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space)."
        },
        "meetingCode": {
          "description": "Output only. Type friendly unique string used to join the meeting. Format: `[a-z]+-[a-z]+-[a-z]+`. For example, `abc-mnop-xyz`. The maximum length is 128 characters. Can only be used as an alias of the space name to get the space.",
          "readOnly": true,
          "type": "string"
        },
        "config": {
          "description": "Configuration pertaining to the meeting space.",
          "$ref": "SpaceConfig"
        }
      },
      "description": "Virtual place where conferences are held. Only one active conference can be held in one space at any given time.",
      "id": "Space",
      "type": "object"
    },
    "Participant": {
      "properties": {
        "earliestStartTime": {
          "type": "string",
          "description": "Output only. Time when the participant first joined the meeting.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "phoneUser": {
          "description": "User calling from their phone.",
          "$ref": "PhoneUser"
        },
        "latestEndTime": {
          "type": "string",
          "description": "Output only. Time when the participant left the meeting for the last time. This can be null if it's an active meeting.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the participant. Format: `conferenceRecords/{conference_record}/participants/{participant}`"
        },
        "signedinUser": {
          "description": "Signed-in user.",
          "$ref": "SignedinUser"
        },
        "anonymousUser": {
          "description": "Anonymous user.",
          "$ref": "AnonymousUser"
        }
      },
      "type": "object",
      "id": "Participant",
      "description": "User who attended or is attending a conference."
    }
  },
  "documentationLink": "https://developers.google.com/meet/api",
  "kind": "discovery#restDescription",
  "baseUrl": "https://meet.googleapis.com/v2beta/",
  "basePath": "/meet/v2beta/",
  "description": "Create and manage meetings in Google Meet.",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://meet.googleapis.com/",
  "id": "meet:v2beta",
  "resources": {
    "conferenceRecords": {
      "methods": {
        "get": {
          "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}",
          "response": {
            "$ref": "ConferenceRecord"
          },
          "path": "v2beta/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/meetings.space.created",
            "https://www.googleapis.com/auth/meetings.space.readonly"
          ],
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "description": "Gets a conference record by conference ID.",
          "parameters": {
            "name": {
              "location": "path",
              "description": "Required. Resource name of the conference.",
              "type": "string",
              "pattern": "^conferenceRecords/[^/]+$",
              "required": true
            }
          },
          "id": "meet.conferenceRecords.get"
        },
        "list": {
          "flatPath": "v2beta/conferenceRecords",
          "id": "meet.conferenceRecords.list",
          "response": {
            "$ref": "ListConferenceRecordsResponse"
          },
          "description": "Lists the conference records. By default, ordered by start time and in descending order.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/meetings.space.created",
            "https://www.googleapis.com/auth/meetings.space.readonly"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Optional. Page token returned from previous List Call."
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "Optional. User specified filtering condition in [EBNF format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following are the filterable fields: * `space.meeting_code` * `space.name` * `start_time` * `end_time` For example, consider the following filters: * `space.name = \"spaces/NAME\"` * `space.meeting_code = \"abc-mnop-xyz\"` * `start_time\u003e=\"2024-01-01T00:00:00.000Z\" AND start_time\u003c=\"2024-01-02T00:00:00.000Z\"` * `end_time IS NULL`"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32",
              "description": "Optional. Maximum number of conference records to return. The service might return fewer than this value. If unspecified, at most 25 conference records are returned. The maximum value is 100; values above 100 are coerced to 100. Maximum might change in the future.",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "path": "v2beta/conferenceRecords"
        }
      },
      "resources": {
        "transcripts": {
          "resources": {
            "entries": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "TranscriptEntry"
                  },
                  "description": "Gets a `TranscriptEntry` resource by entry ID. Note: The transcript entries returned by the Google Meet API might not match the transcription found in the Google Docs transcript file. This can occur when the Google Docs transcript file is modified after generation.",
                  "path": "v2beta/{+name}",
                  "id": "meet.conferenceRecords.transcripts.entries.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^conferenceRecords/[^/]+/transcripts/[^/]+/entries/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Resource name of the `TranscriptEntry`."
                    }
                  },
                  "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/transcripts/{transcriptsId}/entries/{entriesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/meetings.space.created",
                    "https://www.googleapis.com/auth/meetings.space.readonly"
                  ]
                },
                "list": {
                  "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/transcripts/{transcriptsId}/entries",
                  "scopes": [
                    "https://www.googleapis.com/auth/meetings.space.created",
                    "https://www.googleapis.com/auth/meetings.space.readonly"
                  ],
                  "id": "meet.conferenceRecords.transcripts.entries.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTranscriptEntriesResponse"
                  },
                  "path": "v2beta/{+parent}/entries",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. Format: `conferenceRecords/{conference_record}/transcripts/{transcript}`",
                      "type": "string",
                      "location": "path",
                      "pattern": "^conferenceRecords/[^/]+/transcripts/[^/]+$"
                    },
                    "pageToken": {
                      "description": "Page token returned from previous List Call.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of entries to return. The service might return fewer than this value. If unspecified, at most 10 entries are returned. The maximum value is 100; values above 100 are coerced to 100. Maximum might change in the future.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists the structured transcript entries per transcript. By default, ordered by start time and in ascending order. Note: The transcript entries returned by the Google Meet API might not match the transcription found in the Google Docs transcript file. This can occur when the Google Docs transcript file is modified after generation."
                }
              }
            }
          },
          "methods": {
            "list": {
              "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/transcripts",
              "path": "v2beta/{+parent}/transcripts",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/meetings.space.created",
                "https://www.googleapis.com/auth/meetings.space.readonly"
              ],
              "parameters": {
                "pageSize": {
                  "description": "Maximum number of transcripts to return. The service might return fewer than this value. If unspecified, at most 10 transcripts are returned. The maximum value is 100; values above 100 are coerced to 100. Maximum might change in the future.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "parent": {
                  "location": "path",
                  "pattern": "^conferenceRecords/[^/]+$",
                  "description": "Required. Format: `conferenceRecords/{conference_record}`",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Page token returned from previous List Call."
                }
              },
              "description": "Lists the set of transcripts from the conference record. By default, ordered by start time and in ascending order.",
              "parameterOrder": [
                "parent"
              ],
              "id": "meet.conferenceRecords.transcripts.list",
              "response": {
                "$ref": "ListTranscriptsResponse"
              }
            },
            "get": {
              "path": "v2beta/{+name}",
              "httpMethod": "GET",
              "description": "Gets a transcript by transcript ID.",
              "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/transcripts/{transcriptsId}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/meetings.space.created",
                "https://www.googleapis.com/auth/meetings.space.readonly"
              ],
              "id": "meet.conferenceRecords.transcripts.get",
              "parameters": {
                "name": {
                  "pattern": "^conferenceRecords/[^/]+/transcripts/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. Resource name of the transcript.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Transcript"
              }
            }
          }
        },
        "participants": {
          "resources": {
            "participantSessions": {
              "methods": {
                "get": {
                  "description": "Gets a participant session by participant session ID.",
                  "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/participants/{participantsId}/participantSessions/{participantSessionsId}",
                  "id": "meet.conferenceRecords.participants.participantSessions.get",
                  "response": {
                    "$ref": "ParticipantSession"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2beta/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^conferenceRecords/[^/]+/participants/[^/]+/participantSessions/[^/]+$",
                      "description": "Required. Resource name of the participant."
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/meetings.space.created",
                    "https://www.googleapis.com/auth/meetings.space.readonly"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/meetings.space.created",
                    "https://www.googleapis.com/auth/meetings.space.readonly"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. Maximum number of participant sessions to return. The service might return fewer than this value. If unspecified, at most 100 participants are returned. The maximum value is 250; values above 250 are coerced to 250. Maximum might change in the future.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Optional. Page token returned from previous List Call.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Optional. User specified filtering condition in [EBNF format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following are the filterable fields: * `start_time` * `end_time` For example, `end_time IS NULL` returns active participant sessions in the conference record.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Format: `conferenceRecords/{conference_record}/participants/{participant}`",
                      "type": "string",
                      "pattern": "^conferenceRecords/[^/]+/participants/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v2beta/{+parent}/participantSessions",
                  "response": {
                    "$ref": "ListParticipantSessionsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists the participant sessions of a participant in a conference record. By default, ordered by join time and in descending order. This API supports `fields` as standard parameters like every other API. However, when the `fields` request parameter is omitted this API defaults to `'participantsessions/*, next_page_token'`.",
                  "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/participants/{participantsId}/participantSessions",
                  "id": "meet.conferenceRecords.participants.participantSessions.list"
                }
              }
            }
          },
          "methods": {
            "get": {
              "description": "Gets a participant by participant ID.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "Participant"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^conferenceRecords/[^/]+/participants/[^/]+$",
                  "description": "Required. Resource name of the participant."
                }
              },
              "path": "v2beta/{+name}",
              "id": "meet.conferenceRecords.participants.get",
              "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/participants/{participantsId}",
              "scopes": [
                "https://www.googleapis.com/auth/meetings.space.created",
                "https://www.googleapis.com/auth/meetings.space.readonly"
              ]
            },
            "list": {
              "id": "meet.conferenceRecords.participants.list",
              "path": "v2beta/{+parent}/participants",
              "description": "Lists the participants in a conference record. By default, ordered by join time and in descending order. This API supports `fields` as standard parameters like every other API. However, when the `fields` request parameter is omitted, this API defaults to `'participants/*, next_page_token'`.",
              "response": {
                "$ref": "ListParticipantsResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "filter": {
                  "description": "Optional. User specified filtering condition in [EBNF format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following are the filterable fields: * `earliest_start_time` * `latest_end_time` For example, `latest_end_time IS NULL` returns active participants in the conference.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "description": "Required. Format: `conferenceRecords/{conference_record}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^conferenceRecords/[^/]+$"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Page token returned from previous List Call."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Maximum number of participants to return. The service might return fewer than this value. If unspecified, at most 100 participants are returned. The maximum value is 250; values above 250 are coerced to 250. Maximum might change in the future.",
                  "format": "int32",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/meetings.space.created",
                "https://www.googleapis.com/auth/meetings.space.readonly"
              ],
              "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/participants",
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "recordings": {
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "description": "Required. Resource name of the recording.",
                  "pattern": "^conferenceRecords/[^/]+/recordings/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v2beta/{+name}",
              "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/recordings/{recordingsId}",
              "id": "meet.conferenceRecords.recordings.get",
              "description": "Gets a recording by recording ID.",
              "scopes": [
                "https://www.googleapis.com/auth/meetings.space.created",
                "https://www.googleapis.com/auth/meetings.space.readonly"
              ],
              "response": {
                "$ref": "Recording"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET"
            },
            "list": {
              "description": "Lists the recording resources from the conference record. By default, ordered by start time and in ascending order.",
              "path": "v2beta/{+parent}/recordings",
              "parameters": {
                "parent": {
                  "pattern": "^conferenceRecords/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. Format: `conferenceRecords/{conference_record}`"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Maximum number of recordings to return. The service might return fewer than this value. If unspecified, at most 10 recordings are returned. The maximum value is 100; values above 100 are coerced to 100. Maximum might change in the future."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Page token returned from previous List Call."
                }
              },
              "id": "meet.conferenceRecords.recordings.list",
              "flatPath": "v2beta/conferenceRecords/{conferenceRecordsId}/recordings",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListRecordingsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/meetings.space.created",
                "https://www.googleapis.com/auth/meetings.space.readonly"
              ],
              "parameterOrder": [
                "parent"
              ]
            }
          }
        }
      }
    },
    "spaces": {
      "methods": {
        "create": {
          "response": {
            "$ref": "Space"
          },
          "description": "Creates a space.",
          "parameterOrder": [],
          "request": {
            "$ref": "Space"
          },
          "httpMethod": "POST",
          "path": "v2beta/spaces",
          "scopes": [
            "https://www.googleapis.com/auth/meetings.space.created"
          ],
          "parameters": {},
          "id": "meet.spaces.create",
          "flatPath": "v2beta/spaces"
        },
        "get": {
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Required. Resource name of the space. Format: `spaces/{space}` or `spaces/{meetingCode}`. `{space}` is the resource identifier for the space. It's a unique, server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`. `{meetingCode}` is an alias for the space. It's a typeable, unique character string and is non-case sensitive. For example, `abc-mnop-xyz`. The maximum length is 128 characters. A `meetingCode` shouldn't be stored long term as it can become dissociated from a meeting space and can be reused for different meeting spaces in the future. Generally, a `meetingCode` expires 365 days after last use. For more information, see [Learn about meeting codes in Google Meet](https://support.google.com/meet/answer/10710509). For more information, see [How Meet identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).",
              "pattern": "^spaces/[^/]+$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/meetings.space.created",
            "https://www.googleapis.com/auth/meetings.space.readonly",
            "https://www.googleapis.com/auth/meetings.space.settings"
          ],
          "id": "meet.spaces.get",
          "httpMethod": "GET",
          "path": "v2beta/{+name}",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Space"
          },
          "description": "Gets details about a meeting space. For an example, see [Get a meeting space](https://developers.google.com/meet/api/guides/meeting-spaces#get-meeting-space).",
          "flatPath": "v2beta/spaces/{spacesId}"
        },
        "endActiveConference": {
          "description": "Ends an active conference (if there's one). For an example, see [End active conference](https://developers.google.com/meet/api/guides/meeting-spaces#end-active-conference).",
          "flatPath": "v2beta/spaces/{spacesId}:endActiveConference",
          "parameters": {
            "name": {
              "description": "Required. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource identifier for the space. It's a unique, server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).",
              "type": "string",
              "location": "path",
              "pattern": "^spaces/[^/]+$",
              "required": true
            }
          },
          "request": {
            "$ref": "EndActiveConferenceRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "meet.spaces.endActiveConference",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/meetings.space.created"
          ],
          "path": "v2beta/{+name}:endActiveConference"
        },
        "patch": {
          "path": "v2beta/{+name}",
          "description": "Updates details about a meeting space. For an example, see [Update a meeting space](https://developers.google.com/meet/api/guides/meeting-spaces#update-meeting-space).",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "Immutable. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource identifier for the space. It's a unique, server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).",
              "pattern": "^spaces/[^/]+$",
              "location": "path",
              "type": "string",
              "required": true
            },
            "updateMask": {
              "format": "google-fieldmask",
              "location": "query",
              "type": "string",
              "description": "Optional. Field mask used to specify the fields to be updated in the space. If update_mask isn't provided(not set, set with empty paths, or only has \"\" as paths), it defaults to update all fields provided with values in the request. Using \"*\" as update_mask will update all fields, including deleting fields not set in the request."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/meetings.space.created",
            "https://www.googleapis.com/auth/meetings.space.settings"
          ],
          "request": {
            "$ref": "Space"
          },
          "id": "meet.spaces.patch",
          "flatPath": "v2beta/spaces/{spacesId}",
          "response": {
            "$ref": "Space"
          }
        }
      }
    }
  },
  "version_module": true,
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "default": "json",
      "description": "Data format for response."
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/meetings.space.readonly": {
          "description": "Read information about any of your Google Meet conferences"
        },
        "https://www.googleapis.com/auth/meetings.space.created": {
          "description": "Create, edit, and see information about your Google Meet conferences created by the app."
        },
        "https://www.googleapis.com/auth/meetings.space.settings": {
          "description": "Edit, and see settings for all of your Google Meet calls."
        }
      }
    }
  },
  "name": "meet",
  "basePath": ""
}
